name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest

    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Create config.json file
      run: |
        touch config.json
        echo '{"consul_address":"hashicorp-consul-server:8500","logit_address":"5571bfef-c40a-4d84-a5dc-6b5dd6453ac0-ls.logit.io:24240","db_driver":"postgres","db_source":"${{ secrets.PROD_DB_CONNECTION }}","server_address":"0.0.0.0:8080","gin_mode":"debug"}' >> config.json
        cat config.json

    # Publish image to Docker Hub.
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push to Docker Hub
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/user-service:latest
    
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

    # Publish image to AWS.
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: user-service
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
